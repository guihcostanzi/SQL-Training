CREATE DATABASE COMERCIO;

USE COMERCIO;

/* REGRAS DE NEGÓCIO :

	1 - CADA CLIENTE PODE TER MAIS DE 1 TELEFONE, NÃO SENDO OBRIGATÓRIO. --> 0,n
	2 - CADA CLIENTE DEVE CADASTRAR NO MÁXIMO 1 ENDEREÇO. --> 1,1 */

CREATE TABLE CLIENTE (
	IDCLIENTE INT PRIMARY KEY AUTO_INCREMENT, /* SE É PK AUTOMATICAMENTE É OBRIGATÓRIO ( NOT NULL)*/
	NOME VARCHAR(30) NOT NULL, /* NOT NULL DIZ QUE É OBRIGATÓRIO*/
	EMAIL VARCHAR(50) UNIQUE ,
	SEXO ENUM('F','M') NOT NULL, /* ENUM É UM TIPO APENAS DO MYSQL*/
	CPF VARCHAR(11) UNIQUE NOT NULL
);


/* ENDERECO RECEBE A PK DE CLIENTE PORQUE EM UMA RELAÇÃO 1-1, A FK FICA NA ENTIDADE MAIS FRACA*/
CREATE TABLE ENDERECO (
	IDENDERECO INT PRIMARY KEY AUTO_INCREMENT, /* O BANCO AUTO ENCREMENTA O ID COM ESSE COMANDO */
	RUA VARCHAR(100) NOT NULL, 
	BAIRRO VARCHAR(30) NOT NULL,
	CIDADE VARCHAR(30) NOT NULL,
	ESTADO CHAR(2) NOT NULL,
	ID_CLIENTE INT UNIQUE,  /* UNIQUE porque é uma relação 1 para 1, todos os enderecos cadastrad. devem ter ids (FK) diferentes, 
	ou teriam mais de 1 endereço para uma mesma pessoa.*/
	FOREIGN KEY (ID_CLIENTE) /*FOREIGN KEY E REFERENCES ATUAM JUNTOS, NÃO DEVEM SER SEPARADOS POR VIRGULA*/
	REFERENCES CLIENTE(IDCLIENTE) 

);

/* TELEFONE RECEBE A PK DE CLIENTE PORQUE EM UMA RELAÇÃO 1-N, A FK FICA NA ENTIDADE */
CREATE TABLE TELEFONE (
	IDTELEFONE INT PRIMARY KEY AUTO_INCREMENT,
	NUMERO VARCHAR (30) NOT NULL,
	TIPO ENUM('CELULAR', 'RESIDENCIAL', 'TRABALHO') NOT NULL,
	ID_CLIENTE INT, /* O TIPO DA FK DEVE SER O MESMO DA PK A QUE SE REFERE */
	FOREIGN KEY (ID_CLIENTE)
	REFERENCES CLIENTE (IDCLIENTE)
);

/* INSERINDO DADOS DA TABELA CLIENTE*/

/* O PRIMEIRO NULL É PARA O IDCLIENTE, QUE É AUTO_INCREMENT, ENTÃO O SISTEMA QUE CONTROLA. MESMO ASSIM DEVE SER COLOCADO NO INSERT,
PORQUE TODO INSERT DEVE TER O MESMO NÚMERO DE COLUNAS E ELEMENTOS INSERIDOS. -- > Obs : SE A SINTAXE FOR ESSA / APENAS NO MYSQL.*/

INSERT INTO CLIENTE VALUES (NULL, 'CARLOS',NULL, 'M', '98623333476');
INSERT INTO CLIENTE VALUES (NULL, 'JOANA','JOANA@GMAIL.COM', 'F', '90003323897');
INSERT INTO CLIENTE VALUES (NULL, 'LINDOMAR','LINDOMAR@HOTMAIL.COM', 'M', '98623000476');

/* COM ESSA SINTAXE NÃO É NECESSÁRIO COLOCAR OS ELEMENTOS NULL. SE FOR CONTRA A REGRA DE NEGÓCI VAI DAR ERRO DO MESMO JEITO.*/
INSERT INTO CLIENTE (NOME,SEXO,CPF) VALUES ('PEDRO', 'M', '67843444609');
INSERT INTO CLIENTE (NOME,SEXO,CPF) VALUES ('MARTA', 'F', '12800022609');

/* INSERINDO DADOS DA TABELA ENDERECO*/

INSERT INTO ENDERECO VALUES (NULL, 'IGOR BATATA DE SÁ', 'JARDIM PERA', 'LOANDA', 'PR', 1);
INSERT INTO ENDERECO VALUES (NULL, 'FELIPE FREITAS', 'JARDIM ALAMO', 'PITANGA', 'RJ', 2);
INSERT INTO ENDERECO VALUES (NULL, 'ARMANDO SEVERO', 'JARDIM PERA', 'LOANDA', 'PR', 3);
INSERT INTO ENDERECO VALUES (NULL, 'PAULO ROVERI', 'JARDIM PAZ', 'PIRACICABA', 'SP', 4);
INSERT INTO ENDERECO VALUES (NULL, 'PAULO ROVERI', 'JARDIM PAZ', 'PIRACICABA', 'SP', 5);

/* INSERINDO DADOS DA TABELA TELEFONE*/

INSERT INTO TELEFONE VALUES (NULL, '43999765434', 'CELULAR', 1);
INSERT INTO TELEFONE VALUES (NULL, '43922210034', 'CELULAR', 1);
INSERT INTO TELEFONE VALUES (NULL, '7833453322', 'RESIDENCIAL', 2);
INSERT INTO TELEFONE VALUES (NULL, '34930003212', 'CELULAR', 3);
INSERT INTO TELEFONE VALUES (NULL, '9033453322', 'TRABALHO', 4);

/* NESSE CASO, POSSO INSERIR MAIS DE UM TELEFONE POR IDCLIENTE (CLIENTE), MAS SE TENTAR FAZER O MESMO COM ENDERECO VAI DAR ERRO,
UMA VEZ QUE COLOCAMOS O UNIQUE, QUE DEFINE QUE CADA IDCLIENTE PODE ESTAR LIGADO A APENAS UM ENDERECO.

NEM TODO CLIENTE PRECISA TER UMA TUPLA NA TABELA TELEFONE, PORQUE NÃO É OBRIGATÓRIO. */

/*SELECT COM MAIS DE UMA TABELA*/

/* 1 - NOME, SEXO, BAIRRO, CIDADE*/

SELECT NOME, SEXO, BAIRRO, CIDADE
FROM CLIENTE
INNER JOIN ENDERECO
ON IDCLIENTE = ID_CLIENTE;

/*OBS : INNER JOIN é uma cláusula que permite a junção entre duas ou mais tabelas, desde que hajam entrelaçamento ( PK / FK) entre todas.
É como a intersecção do diagrama de Venn.*/

/* 2 - NOME, SEXO, CIDADE, TIPO, NUMERO*/

SELECT NOME, SEXO, CIDADE, TIPO, NUMERO
FROM CLIENTE
INNER JOIN ENDERECO
ON IDCLIENTE = ENDERECO.ID_CLIENTE 
INNER JOIN TELEFONE
ON IDCLIENTE = TELEFONE.ID_CLIENTE;

/* PARA JUNTAR MAIS DE DUAS TABELAS, NAS QUAIS HÁ ATRIBUTOS COM O MESMO NOME, É POSSÍVEL ESPECIFICAR QUAL ATRIBUTO É DE QUAL TABELA,
SEGUINDO A SINTAXE TABELA.ATRIBUTO, COMO ACIMA. ISSO SE CHAMA PONTEIRAMENTO.*/

/* 3 - NOME, SEXO, CPF, TIPO, NUMERO, ESTADO*/

SELECT NOME, SEXO, CPF, TIPO, NUMERO, ESTADO
FROM CLIENTE C
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE;

/* TAMBÉM É POSSÍVEL ATRIBUIR ALIAS ÀS TABELAS, COM A SINTAXE : TABELA + ALIAS. Após isso, colocamos os ponteiros como no exemplo 2.*/

/* 4 - FORMA MAIS PERFORMÁTICA É SEMPRE USAR PONTEIRAMENTO, PORQUE POUPA PROCESSAMENTO DO BANCO DE DADOS, JÁ QUE ELE SERÁ INFORMADO 
EM QUAL TABELA CADA ATRIBUTO ESTÁ, PROCURANDO OS ATRIBUTOS NAS TABELAS CERTAS.

	NOME, CIDADE, ESTADO, CPF*/

SELECT C.NOME, E.CIDADE, E.ESTADO, C.CPF
FROM CLIENTE C 
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE;









